{"version":3,"file":"static/js/653.5d00a57e.chunk.js","mappings":"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","sources":["apis/Invoice.js","utils/CommonDialog.jsx","views/invoice/ViewInvoice.jsx","views/invoice/attachment/AddAttachment.jsx"],"sourcesContent":["import {\r\n    AddAttachment,\r\n    AddInvoice,\r\n    AddPayment,\r\n    AttachmentList,\r\n    DeleteAttachment,\r\n    DeleteInvoice,\r\n    DeletePayment,\r\n    DownloadInvoice,\r\n    DownloadInvoiceAttachment,\r\n    DuplicateInvoice,\r\n    EditInvoice,\r\n    EditPayment,\r\n    INITAttachment,\r\n    InitPayment,\r\n    InvoiceCurrency,\r\n    InvoiceInit,\r\n    InvoiceList,\r\n    PaymentList\r\n} from 'store/ApiConstant';\r\nimport { date } from 'yup/lib/locale';\r\nimport { AxiosAuthServices } from './axios/axiosServices';\r\n\r\nexport function InvoiceInitApi(data = {}) {\r\n    const formData = new FormData();\r\n\r\n    if (data.type === 'add') {\r\n        formData.append('type', data.type);\r\n    } else if (data.type === 'edit' || data.type === 'view') {\r\n        formData.append('type', data.type);\r\n        formData.append('id', data.id);\r\n    }\r\n    return AxiosAuthServices.post(InvoiceInit, formData);\r\n}\r\n\r\nexport function InvoiceListApi(params) {\r\n    return AxiosAuthServices.get(InvoiceList, params);\r\n}\r\n\r\nexport function InvoiceCurrencyApi(params) {\r\n    return AxiosAuthServices.get(InvoiceCurrency, params);\r\n}\r\n\r\nexport function InvoiceAddUpdateApi(data) {\r\n    const formData = new FormData();\r\n\r\n    formData.append('client_id', data.client_id);\r\n    formData.append('invoice_no', data.invoice_number);\r\n    formData.append('invoice_date', data.invoice_date);\r\n    formData.append('invoice_due_date', data.invoice_due_date);\r\n    formData.append('is_bifurcated', data.is_bifurcated);\r\n    formData.append('is_display_company_amount', data.is_display_company_amount);\r\n    formData.append('discount_type', data.discount_type);\r\n    formData.append('invoice_currency_id', data.invoice_currency_id);\r\n    formData.append('invoice_currency_total_amount', data.grand_total);\r\n    formData.append('currency_conversion_rate', data.ccr);\r\n    formData.append('company_currency_total_amount', data.company_amount);\r\n    formData.append('total_tax_amount', data.total_tax);\r\n    formData.append('total_discount', data.total_discount);\r\n    formData.append('total_deduction', data.total_deduction);\r\n    formData.append('subtotal', data.subtotal);\r\n    formData.append('term_id', data.payment_term_id);\r\n    formData.append('subscriber_currency_id', data.subscriber_currency_id);\r\n    formData.append('subscriber_currency_conversion_rate', data.subscriber_ccr);\r\n    formData.append('subscriber_currency_total_amount', data.subscriber_currency_amount);\r\n    formData.append('USD_currency_conversion_rate', data.USD_ccr);\r\n    formData.append('USD_currency_total_amount', data.USD_currency_amount);\r\n    formData.append('invoice_note', data.invoice_note);\r\n\r\n    data.tax_id.map((i, idx) => {\r\n        formData.append(`tax[${idx}][tax_id]`, i.id);\r\n        formData.append(`tax[${idx}][tax_rate]`, i.rate);\r\n        formData.append(`tax[${idx}][is_percentage]`, i.is_percentage);\r\n    });\r\n\r\n    data.invoice_item.map((i, idx) => {\r\n        formData.append(`item[${idx}][item_type_id]`, i.item_type);\r\n        formData.append(`item[${idx}][client_id]`, i.bifurcated_client);\r\n        formData.append(`item[${idx}][resource_name]`, i.item_resource_name);\r\n        formData.append(`item[${idx}][start_date]`, i.item_start_date);\r\n        formData.append(`item[${idx}][end_date]`, i.item_end_date);\r\n        formData.append(`item[${idx}][actual_day]`, i.item_actual_days);\r\n        formData.append(`item[${idx}][working_day]`, i.item_working_days);\r\n        formData.append(`item[${idx}][resource_quantity]`, i.item_qty);\r\n        formData.append(`item[${idx}][rate]`, i.item_rate);\r\n        formData.append(`item[${idx}][deduction]`, i.item_deduction);\r\n        formData.append(`item[${idx}][tax_amount]`, i.item_tax_amount);\r\n        formData.append(`item[${idx}][discount]`, i.item_discount);\r\n        formData.append(`item[${idx}][discount_amount]`, i.item_discount_amount);\r\n        formData.append(`item[${idx}][subtotal]`, i.item_subtotal);\r\n        formData.append(`item[${idx}][total_amount]`, i.item_amount);\r\n        formData.append(`item[${idx}][description]`, i.item_description);\r\n    });\r\n\r\n    data.bank_id.map((i) => {\r\n        formData.append(`bank[]`, i.id);\r\n    });\r\n\r\n    if (data.id !== '' && data.formType === 'edit') {\r\n        formData.append('id', data.id);\r\n        return AxiosAuthServices.post(EditInvoice, formData);\r\n    } else {\r\n        return AxiosAuthServices.post(AddInvoice, formData);\r\n    }\r\n}\r\n\r\nexport function DuplicateInvoiceApi(params) {\r\n    return AxiosAuthServices.get(DuplicateInvoice, params);\r\n}\r\n\r\nexport function InvoiceDeleteApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(DeleteInvoice, formData);\r\n}\r\n\r\nexport function AttachmentListApi(params) {\r\n    return AxiosAuthServices.get(AttachmentList, params);\r\n}\r\n\r\nexport function AttachmentINITApi() {\r\n    return AxiosAuthServices.post(INITAttachment);\r\n}\r\n\r\nexport function AddAttachmentApi(data) {\r\n    const formData = new FormData();\r\n    // formData.append('file_name', data.file_name);\r\n    // formData.append('document', data.attachment_file);\r\n    // formData.append('doc_type', data.doc_type);\r\n    formData.append('invoice_id', data.invoice_id);\r\n    data.files.map((i, idx) => {\r\n        formData.append(`files[${idx}][file_name]`, i.file_name);\r\n        formData.append(`files[${idx}][document]`, i.attachment_file);\r\n        formData.append(`files[${idx}][doc_type]`, i.doc_type);\r\n    });\r\n\r\n    return AxiosAuthServices.post(AddAttachment, formData);\r\n}\r\n\r\nexport function AttachmentDeleteApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(DeleteAttachment, formData);\r\n}\r\n\r\nexport function DownloadInvoiceApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.invoice_id);\r\n    return AxiosAuthServices.post(DownloadInvoice, formData);\r\n}\r\n\r\nexport function DownloadInvoiceAttachmentApi(params) {\r\n    return AxiosAuthServices.get(DownloadInvoiceAttachment, params);\r\n}\r\n\r\n// ========== Invoice Payment ========== //\r\nexport function PaymentListApi(params) {\r\n    return AxiosAuthServices.get(PaymentList, params);\r\n}\r\n\r\nexport function InitPaymentApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('type', data.type);\r\n    formData.append('invoice_id', data.invoice_id);\r\n    if (data.type === 'edit') {\r\n        formData.append('id', data.id);\r\n    }\r\n    return AxiosAuthServices.post(InitPayment, formData);\r\n}\r\n\r\nexport function AddEditPaymentApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('invoice_id', data.invoice_id);\r\n    formData.append('payment_date', data.payment_date);\r\n    formData.append('reference_no', data.ref_no);\r\n    formData.append('payment_source_id', data.way_of_payment);\r\n    formData.append('invoice_currency_amount', data.invoiceCurrencyAmount);\r\n    formData.append('company_currency_amount', data.companyCurrencyAmount);\r\n    formData.append('tds', data.tds);\r\n    formData.append('currency_conversion_rate', data.ccr);\r\n    formData.append('difference', data.difference);\r\n    formData.append('subscriber_ccr', data.subscriber_ccr);\r\n    formData.append('USD_ccr', data.USD_ccr);\r\n    formData.append('status', data.invoice_status);\r\n    formData.append('note', data.note);\r\n    if (data.id !== '' && data.formType === 'edit') {\r\n        formData.append('id', data.id);\r\n        return AxiosAuthServices.post(EditPayment, formData);\r\n    } else {\r\n        return AxiosAuthServices.post(AddPayment, formData);\r\n    }\r\n}\r\n\r\nexport function DeletePaymentApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(DeletePayment, formData);\r\n}\r\n","import { CloseOutlined } from '@mui/icons-material';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, Slide, Typography } from '@mui/material';\r\nimport { forwardRef, useEffect, useState } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\r\n\r\nconst CommonDialog = ({ open, children, title, showButton, sx = {}, onClose, isComment, buttons, id, saveButton }) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpenDialog(open ?? false);\r\n    }, [open]);\r\n\r\n    const openAdd = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n        open = false;\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={openDialog}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            sx={{\r\n                h2: { p: '10px 24px' },\r\n                '& .MuiDialog-container ': {\r\n                    justifyContent: 'flex-end',\r\n                    '& .MuiPaper-root': {\r\n                        m: 0,\r\n                        p: 0,\r\n                        borderRadius: '0px',\r\n                        minWidth: { sm: '60%', xs: '100%' },\r\n                        minHeight: '100%'\r\n                    }\r\n                },\r\n                ...sx\r\n            }}\r\n        >\r\n            {title && (\r\n                <DialogTitle>\r\n                    <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        onClick={handleCloseDialog}\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            right: 8,\r\n                            top: 0\r\n                        }}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n            )}\r\n            <DialogContent dividers>{children}</DialogContent>\r\n            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"flex-end\">\r\n                <Grid item xs={12}>\r\n                    <DialogActions>\r\n                        {/* {buttons} */}\r\n\r\n                        {!saveButton && (\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" form={id}>\r\n                                    Save\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        )}\r\n                        <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CommonDialog;\r\n","import propTypes from 'prop-types';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Chip,\r\n    Divider,\r\n    Grid,\r\n    IconButton,\r\n    Link,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from '@mui/material';\r\nimport { gridSpacing } from 'store/constant';\r\nimport Logo1 from 'assets/images/logo.png';\r\nimport { DeleteOutline, DownloadOutlined } from '@mui/icons-material';\r\nimport AddAttachment from './attachment/AddAttachment';\r\nimport { useEffect, useState } from 'react';\r\nimport CenterDialog from 'views/utilities/CenterDialog';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { AttachmentDeleteApi, AttachmentListApi } from 'apis/Invoice';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport parse from 'html-react-parser';\r\n\r\nconst params = {\r\n    invoice_id: 0\r\n};\r\nlet colCount = 0;\r\nconst ViewInvoice = ({ invoiceData }) => {\r\n    const invoice = invoiceData?.invoice ?? false;\r\n    const client = invoiceData?.client ?? false;\r\n    const invoiceCompany = invoiceData?.invoiceCompanyDetails ?? false;\r\n    const invoiceItems = invoiceData?.invoiceItems ?? false;\r\n    const invoiceTaxes = invoiceData?.invoiceTaxes ?? false;\r\n    const invoiceBanks = invoiceData?.invoiceBanks ?? false;\r\n    const invoiceTerm = invoiceData?.invoiceTerm ?? false;\r\n    const DocumentType = invoiceData?.documentType;\r\n\r\n    const { checkRestriction } = useAuth();\r\n    const [attachmentData, setAttachmentData] = useState([]);\r\n    const [openAttachment, setOpenAttachment] = useState(false);\r\n\r\n    const submitHandler = () => {\r\n        setOpenAttachment((prevState) => !prevState);\r\n        getData();\r\n    };\r\n\r\n    colCount = (invoice.total_discount_flag === true ? 1 : 0) + (invoice.total_deduction_flag === true ? 1 : 0) + invoiceTaxes.length;\r\n\r\n    const getData = () => {\r\n        AttachmentListApi(params)\r\n            .then((res) => {\r\n                setAttachmentData(res.data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        params.invoice_id = invoice.id;\r\n        getData();\r\n    }, [invoice]);\r\n\r\n    // Download\r\n    const downloadAttachment = (row) => {\r\n        const a = document.createElement('a');\r\n        a.href = row.base64_document;\r\n        a.download = row.document;\r\n        a.click();\r\n    };\r\n\r\n    const deleteAttachment = (row) => {\r\n        AttachmentDeleteApi({ id: row.id })\r\n            .then((res) => {\r\n                if (res.data && res.data.status === 1) {\r\n                    getData();\r\n                    apiSuccessSnackBar(res);\r\n                } else {\r\n                    apiValidationSnackBar(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} sm={12} md={8}>\r\n                    <img src={invoiceCompany.company_logo} alt=\"logo\" height=\"70\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <Typography variant=\"h3\">Invoice</Typography>\r\n                    <Typography variant=\"subtitle1\">Invoice # - {invoice.invoice_no}</Typography>\r\n                    <Typography variant=\"subtitle1\">Invoice Date - {invoice.invoice_date}</Typography>\r\n                    <Typography variant=\"subtitle1\">Invoice Due Date - {invoice.invoice_due_date}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow sx={{ backgroundColor: '#515151' }}>\r\n                                    <TableCell sx={{ width: '50%', color: '#FFFFFF' }}>Our Information</TableCell>\r\n                                    <TableCell sx={{ width: '50%', color: '#FFFFFF' }}>Invoice To</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"subtitle1\">{invoiceCompany.company_name}</Typography>\r\n                                        <Typography variant=\"h6\">{`${invoiceCompany.address_1}, ${invoiceCompany.address_2}`}</Typography>\r\n                                        <Typography variant=\"h6\">{`${invoiceCompany.city}, ${invoiceCompany.state}`}</Typography>\r\n                                        <Typography variant=\"h6\">{`${invoiceCompany.country_name}, ${invoiceCompany.zip_code}`}</Typography>\r\n                                        <Typography variant=\"h6\">Phone : {invoiceCompany.contact_number}</Typography>\r\n                                        <Typography variant=\"h6\">Email : {invoiceCompany.email}</Typography>\r\n                                        <Typography variant=\"h6\">Tax ID : {invoiceCompany.tax_no}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"subtitle1\">{client.company_name}</Typography>\r\n                                        <Typography variant=\"h6\">{`${client.address_1}, ${client.address_2}`}</Typography>\r\n                                        <Typography variant=\"h6\">{`${client.city}, ${client.state}`}</Typography>\r\n                                        <Typography variant=\"h6\">{`${client.country_name}, ${client.zip_code}`}</Typography>\r\n                                        <Typography variant=\"h6\">Phone : {client.phone}</Typography>\r\n                                        <Typography variant=\"h6\">Email : {client.email}</Typography>\r\n                                        <Typography variant=\"h6\">Tax ID : {client.tax_no}</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow sx={{ backgroundColor: '#515151' }}>\r\n                                    <TableCell sx={{ color: '#FFFFFF' }}>Description</TableCell>\r\n                                    <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                        Price\r\n                                    </TableCell>\r\n                                    <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                        Resource Qty\r\n                                    </TableCell>\r\n                                    {invoice.total_deduction_flag === true && (\r\n                                        <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                            deduction\r\n                                        </TableCell>\r\n                                    )}\r\n                                    <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                        Amount\r\n                                    </TableCell>\r\n                                    {invoice.total_discount_flag === true && (\r\n                                        <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                            Discount\r\n                                        </TableCell>\r\n                                    )}\r\n                                    {invoiceTaxes &&\r\n                                        invoiceTaxes.map((i, idx) => (\r\n                                            <TableCell align=\"right\" sx={{ color: '#FFFFFF' }} key={idx}>\r\n                                                {`${i.tax_name} (${i.tax_rate}${i.is_percentage === 'Yes' ? '%' : ''})`}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    <TableCell sx={{ color: '#FFFFFF' }} align=\"right\">\r\n                                        Total\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {invoiceItems.map((i, idx) => (\r\n                                    <TableRow key={idx}>\r\n                                        <TableCell>\r\n                                            <Typography variant=\"subtitle1\">{i.resource_name}</Typography>\r\n                                            <Typography variant=\"h6\">{i.description}</Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{i.rate}</TableCell>\r\n                                        <TableCell align=\"right\">{i.resource_quantity}</TableCell>\r\n                                        {invoice.total_deduction_flag === true && <TableCell align=\"right\">{i.deduction}</TableCell>}\r\n                                        <TableCell align=\"right\">{i.subtotal}</TableCell>\r\n                                        {invoice.total_discount_flag === true && <TableCell align=\"right\">{i.discount_amount}</TableCell>}\r\n                                        {i.itemTaxAmount.map((iv, id) => (\r\n                                            <TableCell align=\"right\" key={id}>\r\n                                                {iv.tax_amount}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                        <TableCell align=\"right\">{i.total_amount}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                                <TableRow>\r\n                                    <TableCell colSpan={3}>\r\n                                        <Typography variant=\"h5\">Grand Total</Typography>\r\n                                    </TableCell>\r\n                                    {invoice.total_deduction_flag === true && (\r\n                                        <TableCell align=\"right\">{invoice.total_deduction}</TableCell>\r\n                                    )}\r\n                                    <TableCell align=\"right\">{invoice.subtotal}</TableCell>\r\n                                    {invoice.total_discount_flag === true && <TableCell align=\"right\">{invoice.total_discount}</TableCell>}\r\n                                    {invoiceTaxes &&\r\n                                        invoiceTaxes.map((i, idx) => (\r\n                                            <TableCell align=\"right\" key={idx}>\r\n                                                {i.tax_amount}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    <TableCell align=\"right\">\r\n                                        <Typography variant=\"h5\">{invoice.invoice_currency_total_amount}</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                {/* If company currency show */}\r\n                                {invoice.is_display_company_amount === 'Yes' && (\r\n                                    <>\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={4 + colCount}>\r\n                                                <Typography variant=\"h5\">Company CCR</Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography variant=\"h5\">{invoice.currency_conversion_rate}</Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={4 + colCount}>\r\n                                                <Typography variant=\"h5\">Company Currency Amount</Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography variant=\"h5\">{invoice.company_currency_total_amount}</Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={12} sm={12} md={12}>\r\n                    <Typography variant=\"subtitle1\">This is computer generated invoice no signature required.</Typography>\r\n                </Grid> */}\r\n\r\n                {/* Bank Details */}\r\n                {invoiceBanks.length > 0 && (\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        <Typography variant=\"subtitle1\" mb={`10px`}>\r\n                            Bank Details :\r\n                        </Typography>\r\n                        <Grid container justifyContent=\"space-between\" spacing={1}>\r\n                            {invoiceBanks.map((i, idx) => (\r\n                                <Grid item xs={12} md={invoiceBanks.length === 1 ? 12 : 6} key={idx}>\r\n                                    <Card variant=\"outlined\">\r\n                                        <CardHeader\r\n                                            title={<Typography sx={{ color: '#FFFFFF' }}>{i.bank_detail_name}</Typography>}\r\n                                            sx={{ padding: '15px', backgroundColor: '#515151' }}\r\n                                        />\r\n                                        <CardContent sx={{ padding: '15px' }}>\r\n                                            <Grid container justifyContent=\"space-between\" sx={{ marginBottom: '8px' }}>\r\n                                                <Typography variant=\"body2\" align=\"left\">\r\n                                                    Bank Name :\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\" align=\"right\" color=\"text.secondary\">\r\n                                                    {i.bank_name}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid container justifyContent=\"space-between\" sx={{ marginBottom: '8px' }}>\r\n                                                <Typography variant=\"body2\" align=\"left\">\r\n                                                    Account Name :\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\" align=\"right\" color=\"text.secondary\">\r\n                                                    {i.account_name}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid container justifyContent=\"space-between\" sx={{ marginBottom: '8px' }}>\r\n                                                <Typography variant=\"body2\" align=\"left\">\r\n                                                    Account Number :\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\" align=\"right\" color=\"text.secondary\">\r\n                                                    {i.account_number}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            {i.filed.map((iv, index) => (\r\n                                                <Grid container justifyContent=\"space-between\" sx={{ marginBottom: '8px' }} key={index}>\r\n                                                    <Typography variant=\"body2\" align=\"left\">\r\n                                                        {iv.key} :\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"h6\" align=\"right\" color=\"text.secondary\">\r\n                                                        {iv.value}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n\r\n                {invoiceTerm && (\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        {/* <Typography variant=\"subtitle1\" mb={`10px`}>\r\n                            Invoice Terms :\r\n                        </Typography> */}\r\n                        <Typography variant=\"subtitle1\" component={'div'}>\r\n                            {parse(invoiceTerm.description)}\r\n                        </Typography>\r\n                    </Grid>\r\n                )}\r\n\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Divider>\r\n                        <Chip label=\"Attachment\" />\r\n                    </Divider>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12}>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Typography variant=\"body1\" align=\"left\">\r\n                            Attachment\r\n                        </Typography>\r\n                        {checkRestriction('CAN_ADD_INVOICE_ATTACHMENT') && (\r\n                            <Link\r\n                                underline=\"hover\"\r\n                                sx={{\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                onClick={() => setOpenAttachment((prevState) => !prevState)}\r\n                            >\r\n                                Add Attachment\r\n                            </Link>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TableContainer>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell sx={{ width: '40%' }}>File Name</TableCell>\r\n                                    <TableCell sx={{ width: '40%' }}>Document Type</TableCell>\r\n                                    <TableCell align=\"right\" sx={{ width: '20%' }}>\r\n                                        Action\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {attachmentData.map((i, idx) => (\r\n                                    <TableRow key={idx}>\r\n                                        <TableCell>{i.file_name}</TableCell>\r\n                                        <TableCell>{i.doc_type_name}</TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {checkRestriction('CAN_DOWNLOAD_INVOICE_ATTACHMENT') && (\r\n                                                <IconButton color=\"secondary\" component=\"label\" onClick={() => downloadAttachment(i)}>\r\n                                                    <DownloadOutlined fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            )}\r\n                                            {checkRestriction('CAN_DELETE_INVOICE_ATTACHMENT') && (\r\n                                                <IconButton color=\"error\" component=\"label\" onClick={() => deleteAttachment(i)}>\r\n                                                    <DeleteOutline fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            )}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n            {openAttachment && (\r\n                <CenterDialog\r\n                    title={`Add Attachment`}\r\n                    open={openAttachment}\r\n                    onClose={() => setOpenAttachment((prevState) => !prevState)}\r\n                    id=\"addAttachment\"\r\n                >\r\n                    <AddAttachment\r\n                        attNo={attachmentData.length}\r\n                        formID=\"addAttachment\"\r\n                        onSubmit={submitHandler}\r\n                        invoiceID={invoice.id}\r\n                        initList={DocumentType}\r\n                    />\r\n                </CenterDialog>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nViewInvoice.propTypes = {\r\n    invoiceData: propTypes.object\r\n};\r\nexport default ViewInvoice;\r\n","import { Box, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport { AddAttachmentApi, AttachmentINITApi } from 'apis/Invoice';\r\nimport { useFormik } from 'formik';\r\nimport propTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport Required from 'views/utilities/Required';\r\n\r\n// third party\r\nimport * as yup from 'yup';\r\nconst validationSchema = yup.object().shape({\r\n    // file_name: yup.string().required('File name is required.'),\r\n    // attachment_file: yup\r\n    //     .mixed()\r\n    //     .nullable()\r\n    //     .test(2000000, 'File size is too big put under 2 MB', (value) => !value || (value && value.size <= 2000000))\r\n    //     .required('File is required'),\r\n    // doc_type: yup.string().required('Document type is required.'),\r\n    invoice_id: yup.string().required('Invoice ID is required.'),\r\n\r\n    files: yup.array().of(\r\n        yup.object().shape({\r\n            file_name: yup.string().required('File name is required.'),\r\n            doc_type: yup.string().required('Document type is required.'),\r\n            attachment_file: yup\r\n                .mixed()\r\n                .nullable()\r\n                .test(2000000, 'File size is too big put under 2 MB', (value) => !value || (value && value.size <= 2000000))\r\n                .required('File is required')\r\n        })\r\n    )\r\n});\r\n\r\nconst AddAttachment = ({ attNo, formID, onSubmit, invoiceID }) => {\r\n    const count = attNo + 1;\r\n    const [docType, setDocType] = useState([]);\r\n    // const docName = 'document_' + (attNo + 1);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            // file_name: docName,\r\n            // attachment_file: '',\r\n            // doc_type: '',\r\n            attachment_files: '',\r\n            files: [],\r\n            invoice_id: invoiceID\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            AddAttachmentApi(values)\r\n                .then((res) => {\r\n                    if (res.data && res.data.status === 1) {\r\n                        if (onSubmit) onSubmit();\r\n                        apiSuccessSnackBar(res);\r\n                    } else {\r\n                        apiValidationSnackBar(res);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    apiErrorSnackBar(err);\r\n                });\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        AttachmentINITApi()\r\n            .then((res) => {\r\n                setDocType(res.data.data);\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    }, []);\r\n\r\n    // CheckTouchValidation\r\n    const checkTouchValidation = (filedName, index, columnName) => {\r\n        if (formik.touched[filedName] && formik.touched[filedName][index] && formik.touched[filedName][index][columnName]) {\r\n            if (formik.errors[filedName] && formik.errors[filedName][index] && formik.errors[filedName][index][columnName]) {\r\n                return formik.touched[filedName][index][columnName] && Boolean(formik.errors[filedName][index][columnName]);\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkErrorValidation = (filedName, index, columnName) => {\r\n        if (formik.touched[filedName] && formik.touched[filedName][index] && formik.touched[filedName][index][columnName]) {\r\n            if (formik.errors[filedName] && formik.errors[filedName][index] && formik.errors[filedName][index][columnName]) {\r\n                return formik.touched[filedName][index][columnName] && formik.errors[filedName][index][columnName];\r\n            }\r\n            return '';\r\n        }\r\n        return '';\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <form id={formID} onSubmit={formik.handleSubmit} encType=\"multipart/form-data\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    type=\"file\"\r\n                                    size=\"small\"\r\n                                    id=\"attachment_files\"\r\n                                    name=\"attachment_files\"\r\n                                    label={<Required title=\"File\" />}\r\n                                    onChange={(e) => {\r\n                                        let file = e.target.files;\r\n                                        formik.setFieldValue('attachment_files', file);\r\n                                        const objArray = [];\r\n                                        Object.keys(file).map((i, idx) => {\r\n                                            objArray.push({\r\n                                                file_name: 'document_' + (count + idx),\r\n                                                doc_type: '',\r\n                                                attachment_file: file[i]\r\n                                            });\r\n                                        });\r\n                                        formik.setFieldValue('files', objArray);\r\n                                    }}\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    InputProps={{\r\n                                        inputProps: {\r\n                                            accept: '.jpeg,.jpg,.png,.webp,.docx,.docs,.txt,.xls,.xlsx,.pdf',\r\n                                            multiple: true\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {formik.values.files.map((i, idx) => (\r\n                        <Grid item xs={12} key={idx}>\r\n                            <Grid container alignItems=\"center\" spacing={2}>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <FormControl size=\"small\" fullWidth error={checkTouchValidation('files', idx, 'doc_type')}>\r\n                                        <InputLabel id=\"docTypeLabel\">\r\n                                            <Required title=\"Document Type\" />\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            fullWidth\r\n                                            labelId=\"docTypeLabel\"\r\n                                            id={`files.${idx}.doc_type`}\r\n                                            name={`files.${idx}.doc_type`}\r\n                                            // name=\"doc_type\"\r\n                                            label={<Required title=\"Document Type\" />}\r\n                                            value={formik.values.files[idx].doc_type}\r\n                                            onChange={formik.handleChange}\r\n                                        >\r\n                                            {docType.map((i, idx) => (\r\n                                                <MenuItem value={i.id} key={idx}>\r\n                                                    {i.name}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                        <FormHelperText>{checkErrorValidation('files', idx, 'doc_type')}</FormHelperText>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        id={`files.${idx}.file_name`}\r\n                                        name={`files.${idx}.file_name`}\r\n                                        label={<Required title=\"File Name\" />}\r\n                                        value={formik.values.files[idx].file_name}\r\n                                        onChange={formik.handleChange}\r\n                                        error={checkTouchValidation('files', idx, 'file_name')}\r\n                                        helperText={checkErrorValidation('files', idx, 'file_name')}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <Typography variant=\"subtitle1\">{i.attachment_file.name}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ))}\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}></Grid>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                type=\"file\"\r\n                                size=\"small\"\r\n                                id=\"attachment_file\"\r\n                                name=\"attachment_file\"\r\n                                label={<Required title=\"File\" />}\r\n                                onChange={(e) => {\r\n                                    let file = e.target.files[0];\r\n                                    formik.setFieldValue('attachment_file', file);\r\n                                }}\r\n                                error={formik.touched.attachment_file && Boolean(formik.errors.attachment_file)}\r\n                                helperText={formik.touched.attachment_file && formik.errors.attachment_file}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                InputProps={{\r\n                                    inputProps: {\r\n                                        accept: '.jpeg,.jpg,.png,.webp,.docx,.docs,.txt,.xls,.xlsx,.pdf'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> */}\r\n                </Grid>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nAddAttachment.propTypes = {\r\n    attNo: propTypes.number,\r\n    formID: propTypes.string,\r\n    onSubmit: propTypes.func,\r\n    invoiceID: propTypes.any\r\n};\r\n\r\nexport default AddAttachment;\r\n"],"names":["InvoiceInitApi","data","formData","FormData","type","append","id","AxiosAuthServices","InvoiceInit","InvoiceListApi","params","InvoiceList","InvoiceCurrencyApi","InvoiceCurrency","InvoiceAddUpdateApi","client_id","invoice_number","invoice_date","invoice_due_date","is_bifurcated","is_display_company_amount","discount_type","invoice_currency_id","grand_total","ccr","company_amount","total_tax","total_discount","total_deduction","subtotal","payment_term_id","subscriber_currency_id","subscriber_ccr","subscriber_currency_amount","USD_ccr","USD_currency_amount","invoice_note","tax_id","map","i","idx","rate","is_percentage","invoice_item","item_type","bifurcated_client","item_resource_name","item_start_date","item_end_date","item_actual_days","item_working_days","item_qty","item_rate","item_deduction","item_tax_amount","item_discount","item_discount_amount","item_subtotal","item_amount","item_description","bank_id","formType","EditInvoice","AddInvoice","DuplicateInvoiceApi","DuplicateInvoice","InvoiceDeleteApi","DeleteInvoice","AttachmentListApi","AttachmentList","AttachmentINITApi","INITAttachment","AddAttachmentApi","invoice_id","files","file_name","attachment_file","doc_type","AddAttachment","AttachmentDeleteApi","DeleteAttachment","DownloadInvoiceApi","DownloadInvoice","DownloadInvoiceAttachmentApi","DownloadInvoiceAttachment","PaymentListApi","PaymentList","InitPaymentApi","InitPayment","AddEditPaymentApi","payment_date","ref_no","way_of_payment","invoiceCurrencyAmount","companyCurrencyAmount","tds","difference","invoice_status","note","EditPayment","AddPayment","DeletePaymentApi","DeletePayment","Transition","forwardRef","props","ref","direction","open","children","title","showButton","sx","onClose","isComment","buttons","saveButton","openDialog","setOpenDialog","useState","useEffect","handleCloseDialog","prevState","TransitionComponent","keepMounted","h2","p","justifyContent","m","borderRadius","minWidth","sm","xs","minHeight","variant","gutterBottom","component","onClick","position","right","top","dividers","container","alignItems","spacing","gridSpacing","item","color","form","colCount","invoiceData","invoice","client","invoiceCompany","invoiceCompanyDetails","invoiceItems","invoiceTaxes","invoiceBanks","invoiceTerm","DocumentType","documentType","checkRestriction","useAuth","attachmentData","setAttachmentData","openAttachment","setOpenAttachment","total_discount_flag","total_deduction_flag","length","getData","then","res","catch","err","console","log","md","src","company_logo","alt","height","invoice_no","backgroundColor","width","company_name","address_1","address_2","city","state","country_name","zip_code","contact_number","email","tax_no","phone","align","tax_name","tax_rate","resource_name","description","resource_quantity","deduction","discount_amount","itemTaxAmount","iv","tax_amount","total_amount","colSpan","invoice_currency_total_amount","currency_conversion_rate","company_currency_total_amount","mb","bank_detail_name","padding","marginBottom","bank_name","account_name","account_number","filed","index","key","value","parse","label","underline","cursor","size","doc_type_name","row","a","document","createElement","href","base64_document","download","click","downloadAttachment","fontSize","deleteAttachment","status","apiSuccessSnackBar","apiValidationSnackBar","apiErrorSnackBar","attNo","formID","onSubmit","invoiceID","initList","validationSchema","yup","shape","required","of","nullable","test","count","docType","setDocType","formik","useFormik","initialValues","attachment_files","values","checkTouchValidation","filedName","columnName","touched","errors","Boolean","checkErrorValidation","handleSubmit","encType","fullWidth","name","onChange","e","file","target","setFieldValue","objArray","Object","keys","push","InputLabelProps","shrink","InputProps","inputProps","accept","multiple","error","labelId","handleChange","helperText"],"sourceRoot":""}