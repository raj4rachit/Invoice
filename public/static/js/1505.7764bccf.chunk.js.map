{"version":3,"file":"static/js/1505.7764bccf.chunk.js","mappings":"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","sources":["apis/Reports.js","views/reports/expenseStatement/GenerateForm.jsx","views/reports/expenseStatement/ReportPage.jsx","views/reports/expenseStatement/index.jsx","../node_modules/@mui/icons-material/esm/AddCircleOutlineOutlined.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import { ExpenseStatement, IncomeStatement, InitIncomeStatement, InitReport, ProfitLossReport, YOYReport } from 'store/ApiConstant';\r\nimport { AxiosAuthServices } from './axios/axiosServices';\r\n\r\nexport function InitReportApi() {\r\n    return AxiosAuthServices.get(InitReport);\r\n}\r\nexport function ProfitLossReportApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('company_id', data.company_id);\r\n    formData.append('start_date', data.start_date);\r\n    formData.append('end_date', data.end_date);\r\n    return AxiosAuthServices.post(ProfitLossReport, formData);\r\n}\r\n\r\n// Income Statement\r\nexport function InitIncomeStatementApi() {\r\n    return AxiosAuthServices.get(InitIncomeStatement);\r\n}\r\n\r\nexport function IncomeStatementApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('company_id', data.company_id);\r\n    formData.append('start_date', data.start_date);\r\n    formData.append('end_date', data.end_date);\r\n    return AxiosAuthServices.post(IncomeStatement, formData);\r\n}\r\n\r\nexport function ExpenseStatementApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('company_id', data.company_id);\r\n    formData.append('start_date', data.start_date);\r\n    formData.append('end_date', data.end_date);\r\n    return AxiosAuthServices.post(ExpenseStatement, formData);\r\n}\r\n\r\nexport function YOYReportApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('company_id', data.company_id);\r\n    data.financial_years.map((i) => {\r\n        formData.append('years[]', i.year_id);\r\n    });\r\n    return AxiosAuthServices.post(YOYReport, formData);\r\n}\r\n","import propTypes from 'prop-types';\r\nimport { Grid, MenuItem, TextField } from '@mui/material';\r\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { useFormik } from 'formik';\r\nimport moment from 'moment';\r\nimport { ExpenseStatementApi } from 'apis/Reports';\r\nimport { apiErrorSnackBar } from 'utils/SnackBar';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nconst GenerateForm = ({ value, formID, initData, setReportData, onSubmit }) => {\r\n    const { company } = useAuth();\r\n    const initialData = initData ?? false;\r\n    const initValue = Object.keys(value).length > 0 ? value : false;\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            company_id: initValue ? initValue.company_id : company.company_id,\r\n            start_date: initValue ? moment(initValue.start_date) : moment(company.start_date),\r\n            end_date: initValue ? moment(initValue.end_date) : moment(company.end_date)\r\n        },\r\n        onSubmit: (values) => {\r\n            values.start_date = moment(values.start_date).format('YYYY-MM-DD');\r\n            values.end_date = moment(values.end_date).format('YYYY-MM-DD');\r\n\r\n            ExpenseStatementApi(values)\r\n                .then((res) => {\r\n                    if (onSubmit) onSubmit();\r\n                    setReportData(res.data.data);\r\n                })\r\n                .catch((err) => {\r\n                    apiErrorSnackBar(err);\r\n                });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form id={formID} onSubmit={formik.handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} localeText={{ start: 'Start Date', end: 'From Date' }}>\r\n                    <Grid item xs={12}>\r\n                        <DesktopDatePicker\r\n                            id=\"start_date\"\r\n                            name=\"start_date\"\r\n                            label=\"Start Date\"\r\n                            inputFormat=\"YYYY-MM-DD\"\r\n                            value={formik.values.start_date}\r\n                            onChange={(newValue) => {\r\n                                formik.setFieldValue('start_date', moment(newValue));\r\n                            }}\r\n                            renderInput={(params) => <TextField fullWidth size=\"small\" {...params} />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DesktopDatePicker\r\n                            id=\"end_date\"\r\n                            name=\"end_date\"\r\n                            label=\"End date\"\r\n                            inputFormat=\"YYYY-MM-DD\"\r\n                            value={formik.values.end_date}\r\n                            onChange={(newValue) => {\r\n                                formik.setFieldValue('end_date', moment(newValue));\r\n                            }}\r\n                            renderInput={(params) => <TextField fullWidth size=\"small\" {...params} />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            select\r\n                            size=\"small\"\r\n                            label=\"Company\"\r\n                            fullWidth\r\n                            id=\"company_id\"\r\n                            name=\"company_id\"\r\n                            value={formik.values.company_id}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.company_id && Boolean(formik.errors.company_id)}\r\n                            helperText={formik.touched.company_id && formik.errors.company_id}\r\n                        >\r\n                            <MenuItem key={-1} value={0}>\r\n                                All Companies\r\n                            </MenuItem>\r\n                            {initialData &&\r\n                                initialData.companyList.map((i, idx) => (\r\n                                    <MenuItem key={idx} value={i.id}>\r\n                                        {i.company_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                </LocalizationProvider>\r\n            </Grid>\r\n        </form>\r\n    );\r\n};\r\n\r\n// ========== PropTypes ========== //\r\n\r\nGenerateForm.propTypes = {\r\n    value: propTypes.object,\r\n    formID: propTypes.string.isRequired,\r\n    initData: propTypes.object,\r\n    setReportData: propTypes.func,\r\n    onSubmit: propTypes.func\r\n};\r\n\r\nexport default GenerateForm;\r\n","import { Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\nconst ReportPage = ({ reportData }) => {\r\n    const company = reportData.companyDetails;\r\n    const expenses = reportData.expenses;\r\n\r\n    const columnCount = reportData.company_id === '0' ? 4 : 3;\r\n    return (\r\n        <TableContainer>\r\n            <Table\r\n                sx={{\r\n                    [`& .${tableCellClasses.root}`]: {\r\n                        borderBottom: 'none'\r\n                    }\r\n                }}\r\n            >\r\n                <TableHead>\r\n                    {reportData.company_id === '0' ? (\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">\r\n                                <Typography variant=\"h2\">All Companies</Typography>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ) : (\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">\r\n                                <Typography variant=\"h2\">{company.company_name}</Typography>\r\n                                <Typography variant=\"inherit\">\r\n                                    {`${company.address_1}${company.address_2 && ` ${company.address_2}`}`},\r\n                                    {` ${company.city}, ${company.state} ${company.zip_code}`}\r\n                                </Typography>\r\n                                <Typography variant=\"inherit\">\r\n                                    {`Phone : ${company.contact_number}`} | {`Email : ${company.email}`}\r\n                                </Typography>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    )}\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">\r\n                            <Typography variant=\"h3\">Expense Report</Typography>\r\n                            <Typography variant=\"h4\">\r\n                                For the period ended\r\n                                {` ${moment(reportData.start_date).format('DD-MMM, YYYY')} To ${moment(reportData.end_date).format(\r\n                                    'DD-MMM, YYYY'\r\n                                )}`}\r\n                            </Typography>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n            </Table>\r\n\r\n            <Table\r\n                size=\"small\"\r\n                sx={{\r\n                    marginTop: 5,\r\n                    [`& .${tableCellClasses.root}`]: {\r\n                        borderLeft: '1px solid',\r\n                        borderRight: '1px solid',\r\n                        borderTop: '1px solid',\r\n                        borderBottom: '1px solid'\r\n                    }\r\n                }}\r\n            >\r\n                <TableHead\r\n                    sx={{\r\n                        backgroundColor: 'lightblue'\r\n                    }}\r\n                >\r\n                    <TableRow>\r\n                        <TableCell sx={{ width: '60%' }} colSpan={columnCount}>\r\n                            <Typography variant=\"h4\">Expenses</Typography>\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                            <Typography variant=\"h4\">({reportData.Subscriber_currency_symbol})</Typography>\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                            <Typography variant=\"h4\">({reportData.USD_symbol})</Typography>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {expenses.map((i, cidx) => {\r\n                        const subCategory = i.sub_categories;\r\n                        return subCategory.map((iSub, sidx) => {\r\n                            const company = iSub.company;\r\n                            return company.map((iCom, cidx) => {\r\n                                const expenses = iCom.expenses;\r\n                                return expenses.map((iE, idx) => (\r\n                                    <TableRow key={idx}>\r\n                                        {/* {cidx === 0 && sidx === 0 && idx === 0 && <TableCell rowSpan={i.count}>{i.name}</TableCell>} */}\r\n                                        {sidx === 0 && cidx === 0 && idx === 0 && (\r\n                                            <TableCell rowSpan={i.count}>\r\n                                                {i.name}\r\n                                                <Typography variant=\"subtitle2\" mt={1}>\r\n                                                    <b>\r\n                                                        {i.subscriber_amount} | {i.USD_amount}\r\n                                                    </b>\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        )}\r\n                                        {cidx === 0 && idx === 0 && (\r\n                                            <TableCell rowSpan={iSub.count}>\r\n                                                {iSub.name}\r\n                                                <Typography variant=\"subtitle2\" mt={1}>\r\n                                                    <b>\r\n                                                        {iSub.subscriber_amount} | {iSub.USD_amount}\r\n                                                    </b>\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        )}\r\n                                        {reportData.company_id === '0' && idx === 0 && (\r\n                                            <TableCell rowSpan={iCom.count}>\r\n                                                {iCom.name}\r\n                                                <Typography variant=\"subtitle2\" mt={1}>\r\n                                                    <b>\r\n                                                        {iCom.subscriber_amount} | {iCom.USD_amount}\r\n                                                    </b>\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        )}\r\n                                        <TableCell>\r\n                                            {iE.title}\r\n                                            {/* {reportData.company_id === '0' && ` - ${iE.company_name}`} */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{iE.subscriber_amount}</TableCell>\r\n                                        <TableCell align=\"right\">{iE.USD_amount}</TableCell>\r\n                                    </TableRow>\r\n                                ));\r\n                            });\r\n                        });\r\n                    })}\r\n                    <TableRow\r\n                        sx={{\r\n                            backgroundColor: 'lightgreen'\r\n                        }}\r\n                    >\r\n                        <TableCell colSpan={columnCount}>\r\n                            <Typography variant=\"subtitle1\">Total Expense</Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Typography variant=\"subtitle1\">{reportData.total_income_subscriber_currency}</Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Typography variant=\"subtitle1\">{reportData.total_income_USD}</Typography>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default ReportPage;\r\n","import { AddCircleOutlineOutlined } from '@mui/icons-material';\r\nimport { Box, Button, Grid, Typography } from '@mui/material';\r\nimport { ExpenseStatementApi, InitIncomeStatementApi } from 'apis/Reports';\r\nimport useAuth from 'hooks/useAuth';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { apiErrorSnackBar } from 'utils/SnackBar';\r\nimport CenterDialog from 'views/utilities/CenterDialog';\r\nimport GenerateForm from './GenerateForm';\r\nimport ReportPage from './ReportPage';\r\n\r\nconst Index = () => {\r\n    const { company, recall } = useAuth();\r\n    const [openGenerate, setOpenGenerate] = useState(false);\r\n    const [reportData, setReportData] = useState({});\r\n    const [initData, setInitData] = useState({});\r\n\r\n    const generateReport = () => {\r\n        setOpenGenerate((prevState) => !prevState);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        setOpenGenerate((prevState) => !prevState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        InitIncomeStatementApi()\r\n            .then((res) => {\r\n                setInitData(res.data.data);\r\n            })\r\n            .catch(() => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const values = {\r\n            company_id: company.company_id,\r\n            start_date: moment(company.start_date).format('YYYY-MM-DD'),\r\n            end_date: moment(company.end_date).format('YYYY-MM-DD')\r\n        };\r\n\r\n        ExpenseStatementApi(values)\r\n            .then((res) => {\r\n                setReportData(res.data.data);\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    }, [recall]);\r\n\r\n    return (\r\n        <>\r\n            <MainCard\r\n                title={\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing} sx={{ mb: -1, mt: -3 }}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Typography variant=\"column\">Expense Statement</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" onClick={() => generateReport()}>\r\n                                        <AddCircleOutlineOutlined sx={{ mr: 0.5 }} /> Generate Report\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={true}\r\n            >\r\n                {Object.keys(reportData).length > 0 ? (\r\n                    <ReportPage reportData={reportData} />\r\n                ) : (\r\n                    <Box component=\"span\">\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            textAlign=\"center\"\r\n                            sx={{\r\n                                p: '10%'\r\n                            }}\r\n                            color=\"GrayText\"\r\n                        >\r\n                            Please Generate Report\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n            </MainCard>\r\n            {openGenerate && (\r\n                <CenterDialog\r\n                    title={`Generate Income Statement Report`}\r\n                    open={openGenerate}\r\n                    onClose={() => setOpenGenerate((prevState) => !prevState)}\r\n                    id=\"generateForm\"\r\n                >\r\n                    <GenerateForm\r\n                        value={reportData}\r\n                        formID=\"generateForm\"\r\n                        initData={initData}\r\n                        setReportData={setReportData}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                </CenterDialog>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutlineOutlined');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["InitReportApi","AxiosAuthServices","InitReport","ProfitLossReportApi","data","formData","FormData","append","company_id","start_date","end_date","ProfitLossReport","InitIncomeStatementApi","InitIncomeStatement","IncomeStatementApi","IncomeStatement","ExpenseStatementApi","ExpenseStatement","YOYReportApi","financial_years","map","i","year_id","YOYReport","value","formID","initData","setReportData","onSubmit","company","useAuth","initialData","initValue","Object","keys","length","formik","useFormik","initialValues","moment","values","format","then","res","catch","err","apiErrorSnackBar","id","handleSubmit","Grid","container","spacing","LocalizationProvider","dateAdapter","AdapterMoment","localeText","start","end","item","xs","DesktopDatePicker","name","label","inputFormat","onChange","newValue","setFieldValue","renderInput","params","TextField","fullWidth","size","select","handleChange","error","touched","Boolean","errors","helperText","MenuItem","companyList","idx","company_name","reportData","companyDetails","expenses","columnCount","TableContainer","Table","sx","tableCellClasses","borderBottom","TableHead","TableRow","TableCell","align","Typography","variant","address_1","address_2","city","state","zip_code","contact_number","email","marginTop","borderLeft","borderRight","borderTop","backgroundColor","width","colSpan","Subscriber_currency_symbol","USD_symbol","TableBody","cidx","sub_categories","iSub","sidx","iCom","iE","rowSpan","count","mt","subscriber_amount","USD_amount","title","total_income_subscriber_currency","total_income_USD","recall","openGenerate","setOpenGenerate","useState","setInitData","useEffect","MainCard","alignItems","gridSpacing","mb","flexGrow","Button","onClick","prevState","AddCircleOutlineOutlined","mr","content","Box","component","textAlign","p","color","CenterDialog","open","onClose","createSvgIcon","_jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","props","styles","root","display","tablelvl2","defaultComponent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","children","as","clsx","role"],"sourceRoot":""}