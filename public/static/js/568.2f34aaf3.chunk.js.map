{"version":3,"file":"static/js/568.2f34aaf3.chunk.js","mappings":"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","sources":["utils/CommonDialog.jsx","views/restriction/AddEditRestriction.jsx","apis/Restriction.js","views/restriction/RestrictionList.jsx","views/restriction/index.jsx","views/utilities/DeleteDialog.jsx","../node_modules/@mui/icons-material/esm/CloseOutlined.js","../node_modules/@mui/icons-material/esm/DeleteOutline.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import { CloseOutlined } from '@mui/icons-material';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, Slide, Typography } from '@mui/material';\r\nimport { forwardRef, useEffect, useState } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\r\n\r\nconst CommonDialog = ({ open, children, title, showButton, sx = {}, onClose, isComment, buttons, id, saveButton }) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpenDialog(open ?? false);\r\n    }, [open]);\r\n\r\n    const openAdd = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n        open = false;\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={openDialog}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            sx={{\r\n                h2: { p: '10px 24px' },\r\n                '& .MuiDialog-container ': {\r\n                    justifyContent: 'flex-end',\r\n                    '& .MuiPaper-root': {\r\n                        m: 0,\r\n                        p: 0,\r\n                        borderRadius: '0px',\r\n                        minWidth: { sm: '60%', xs: '100%' },\r\n                        minHeight: '100%'\r\n                    }\r\n                },\r\n                ...sx\r\n            }}\r\n        >\r\n            {title && (\r\n                <DialogTitle>\r\n                    <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        onClick={handleCloseDialog}\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            right: 8,\r\n                            top: 0\r\n                        }}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n            )}\r\n            <DialogContent dividers>{children}</DialogContent>\r\n            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"flex-end\">\r\n                <Grid item xs={12}>\r\n                    <DialogActions>\r\n                        {/* {buttons} */}\r\n\r\n                        {!saveButton && (\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" form={id}>\r\n                                    Save\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        )}\r\n                        <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CommonDialog;\r\n","import { Autocomplete, Box, Checkbox, Grid, TextField, Typography } from '@mui/material';\r\nimport { addUpdateRestrictionApi } from 'apis/Restriction';\r\nimport { useFormik } from 'formik';\r\nimport propTypes from 'prop-types';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport Required from 'views/utilities/Required';\r\n\r\n// third party\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string().required('Restriction name is required.'),\r\n    slug: yup.string().required('Restriction slug is required.'),\r\n    description: yup.string().required('Restriction description is required.'),\r\n    // permission: yup.object().required('Permission is required.')\r\n    permission_id: yup.string().required('Permission is required.')\r\n});\r\n\r\nconst AddEditRestriction = ({ value, formId, onSubmit, permissions }) => {\r\n    const initValue = value ?? false;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: initValue ? initValue.id : '',\r\n            name: initValue ? initValue.name : '',\r\n            slug: initValue ? initValue.slug : '',\r\n            description: initValue ? initValue.description : '',\r\n            permission_id: initValue ? initValue.permission_id : '',\r\n            formType: initValue && initValue.id ? 'edit' : 'add'\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            addUpdateRestrictionApi(values)\r\n                .then((res) => {\r\n                    if (res.data && res.data.status === 1) {\r\n                        if (onSubmit) onSubmit();\r\n                        apiSuccessSnackBar(res);\r\n                    } else {\r\n                        apiValidationSnackBar(res);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    apiErrorSnackBar(err);\r\n                });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box>\r\n            <form id={formId} onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Restriction Name\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    label=\"Restriction Name\"\r\n                                    defaultValue={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                    helperText={formik.touched.name && formik.errors.name}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Restriction Slug\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"slug\"\r\n                                    name=\"slug\"\r\n                                    label=\"Restriction Slug\"\r\n                                    defaultValue={formik.values.slug}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.slug && Boolean(formik.errors.slug)}\r\n                                    helperText={formik.touched.slug && formik.errors.slug}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Description\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    size=\"small\"\r\n                                    rows={4}\r\n                                    label=\"Restriction Description\"\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    defaultValue={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Permissions\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Autocomplete\r\n                                    options={permissions ?? []}\r\n                                    getOptionLabel={(option) => (option.name ? option.name : '')}\r\n                                    value={\r\n                                        formik.values.permission_id\r\n                                            ? permissions.filter((pr) => pr.id === formik.values.permission_id)[0]\r\n                                            : null\r\n                                    }\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox checked={selected} value={option.id} />\r\n                                            {option.name}\r\n                                        </li>\r\n                                    )}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            size=\"small\"\r\n                                            id=\"permission_id\"\r\n                                            name=\"permission_id\"\r\n                                            label=\"Permissions\"\r\n                                            error={formik.touched.permission_id && Boolean(formik.errors.permission_id)}\r\n                                            helperText={formik.touched.permission_id && formik.errors.permission_id}\r\n                                        />\r\n                                    )}\r\n                                    onChange={(_, value) => {\r\n                                        const id = value ? value.id : '';\r\n                                        formik.setFieldValue('permission_id', id);\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nAddEditRestriction.propTypes = {\r\n    value: propTypes.object,\r\n    formId: propTypes.string.isRequired,\r\n    onSubmit: propTypes.func,\r\n    permissions: propTypes.array.isRequired\r\n};\r\n\r\nexport default AddEditRestriction;\r\n","import { AddRestriction, DeleteRestriction, EditRestriction, RestrictionList } from 'store/ApiConstant';\r\nimport { AxiosAuthServices } from './axios/axiosServices';\r\n\r\nexport function restrictionListApi(params) {\r\n    return AxiosAuthServices.get(RestrictionList, params);\r\n}\r\n\r\nexport function addUpdateRestrictionApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('name', data.name);\r\n    formData.append('slug', data.slug);\r\n    formData.append('description', data.description);\r\n    formData.append('permission_id', data.permission_id);\r\n\r\n    if (data.id !== '' && data.formType === 'edit') {\r\n        formData.append('id', data.id);\r\n        return AxiosAuthServices.post(EditRestriction, formData);\r\n    } else {\r\n        return AxiosAuthServices.post(AddRestriction, formData);\r\n    }\r\n}\r\n\r\nexport function deleteRestrictionApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(DeleteRestriction, formData);\r\n}\r\n","import { DeleteOutline, Edit as EditIcon } from '@mui/icons-material';\r\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\r\nimport { deleteRestrictionApi, restrictionListApi } from 'apis/Restriction';\r\nimport propTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport CommonDialog from 'utils/CommonDialog';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport DeleteDialog from 'views/utilities/DeleteDialog';\r\nimport AddEditRestriction from './AddEditRestriction';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', align: 'left', width: '30%' },\r\n    { id: 'slug', label: 'Slug', align: 'left', width: '30%' },\r\n    { id: 'permissions', label: 'Permissions', align: 'left', width: '20%' },\r\n    { id: 'action', label: 'Action', align: 'right', width: '20%' }\r\n];\r\nconst params = {\r\n    search: '',\r\n    permission_id: '0',\r\n    orderColumn: 1,\r\n    displayLength: 10,\r\n    displayStart: 0\r\n};\r\nlet recordsTotal = 0;\r\nconst RestrictionList = ({ search, permissionFilter, callApi, setPermissionData, permissionData }) => {\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [restrictionData, setRestrictionData] = useState({});\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        setOpenEdit((prevState) => !prevState);\r\n        getData();\r\n    };\r\n\r\n    const editData = (row) => {\r\n        setOpenEdit((prevState) => !prevState);\r\n        setRestrictionData(row);\r\n    };\r\n\r\n    const deleteData = (row) => {\r\n        setOpenDelete(true);\r\n        setRestrictionData(row);\r\n    };\r\n\r\n    const deleteHandler = () => {\r\n        deleteRestrictionApi({ id: restrictionData.id })\r\n            .then((res) => {\r\n                if (res.data && res.data.status === 1) {\r\n                    setPage(0);\r\n                    getData();\r\n                    setOpenDelete(false);\r\n                    apiSuccessSnackBar(res);\r\n                } else {\r\n                    apiValidationSnackBar(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    // GetRestriction Data\r\n    const getData = async () => {\r\n        await restrictionListApi(params)\r\n            .then((res) => {\r\n                recordsTotal = res.data.data.totalCount;\r\n                setPermissionData(res.data.data.permissionList);\r\n                setData(res.data.data.data);\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        params.search = search;\r\n        params.permission_id = permissionFilter;\r\n        params.orderColumn = 0;\r\n        params.displayLength = rowsPerPage;\r\n        params.displayStart = rowsPerPage * page;\r\n        getData();\r\n    }, [search, permissionFilter, callApi, page, rowsPerPage]);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell key={column.id} align={column.align} style={{ width: column.width }}>\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data.map((item, index) => (\r\n                            <TableRow hover role=\"checkbox\" key={index}>\r\n                                <TableCell>{item.name}</TableCell>\r\n                                <TableCell>{item.slug}</TableCell>\r\n                                <TableCell>{item.permission_name}</TableCell>\r\n                                <TableCell align={'right'}>\r\n                                    <IconButton color=\"primary\" component=\"label\" onClick={() => editData(item)}>\r\n                                        <EditIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <IconButton color=\"error\" component=\"label\" onClick={() => deleteData(item)}>\r\n                                        <DeleteOutline fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                component=\"div\"\r\n                count={Number(recordsTotal)}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n\r\n            {openEdit && (\r\n                <CommonDialog\r\n                    open={openEdit}\r\n                    title=\"Edit Restriction\"\r\n                    onClose={() => setOpenEdit((prevState) => !prevState)}\r\n                    id=\"editRestriction\"\r\n                >\r\n                    <AddEditRestriction\r\n                        value={restrictionData}\r\n                        formId=\"editRestriction\"\r\n                        onSubmit={submitHandler}\r\n                        permissions={permissionData}\r\n                    />\r\n                </CommonDialog>\r\n            )}\r\n\r\n            {openDelete && (\r\n                <DeleteDialog\r\n                    onDeleteHandler={deleteHandler}\r\n                    onClose={() => setOpenDelete(false)}\r\n                    open={openDelete}\r\n                    dept=\"Restriction\"\r\n                    name={restrictionData['name']}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nRestrictionList.propTypes = {\r\n    search: propTypes.string,\r\n    permissionFilter: propTypes.string,\r\n    callApi: propTypes.bool,\r\n    setPermissionData: propTypes.func,\r\n    permissionData: propTypes.array\r\n};\r\n\r\nexport default RestrictionList;\r\n","import { AddCircleOutlineOutlined } from '@mui/icons-material';\r\nimport { Button, FormControl, Grid, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, Typography } from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { useState } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport CommonDialog from 'utils/CommonDialog';\r\nimport AddEditRestriction from './AddEditRestriction';\r\nimport RestrictionList from './RestrictionList';\r\n\r\nconst Index = () => {\r\n    const [search, setSearch] = useState('');\r\n    const [permissionFilter, setPermissionFilter] = useState('0');\r\n    const [callApi, setCallApi] = useState(false);\r\n    const [permissionData, setPermissionData] = useState([]);\r\n    const [openAdd, setOpenAdd] = useState(false);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const addData = () => {\r\n        setOpenAdd((prevState) => !prevState);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        setOpenAdd((prevState) => !prevState);\r\n        setCallApi((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <>\r\n            <MainCard\r\n                title={\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing} sx={{ mb: -1, mt: -4 }}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Typography variant=\"column\">Restriction List</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" onClick={() => addData()}>\r\n                                        <AddCircleOutlineOutlined sx={{ mr: 0.5 }} /> Add Restriction\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl size=\"small\" sx={{ minWidth: '100px' }}>\r\n                                        <InputLabel id=\"permission\">Permissions</InputLabel>\r\n                                        <Select\r\n                                            fullWidth\r\n                                            labelId=\"permission\"\r\n                                            id=\"permission\"\r\n                                            label=\"Permissions\"\r\n                                            defaultValue=\"0\"\r\n                                            onChange={(e) => {\r\n                                                setPermissionFilter(e.target.value);\r\n                                            }}\r\n                                            MenuProps={{\r\n                                                style: {\r\n                                                    maxHeight: 500\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value=\"0\">All</MenuItem>\r\n                                            {permissionData.map((item, idx) => (\r\n                                                <MenuItem value={item.id} key={idx}>\r\n                                                    {item.name}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <OutlinedInput\r\n                                        id=\"input-search-list-style1\"\r\n                                        placeholder=\"Search\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        size=\"small\"\r\n                                        onChange={handleSearch}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={true}\r\n            >\r\n                <RestrictionList\r\n                    search={search}\r\n                    permissionFilter={permissionFilter}\r\n                    callApi={callApi}\r\n                    setPermissionData={setPermissionData}\r\n                    permissionData={permissionData}\r\n                />\r\n            </MainCard>\r\n            {openAdd && (\r\n                <CommonDialog\r\n                    open={openAdd}\r\n                    title=\"Add Restriction\"\r\n                    onClose={() => setOpenAdd((prevState) => !prevState)}\r\n                    id=\"addRestriction\"\r\n                >\r\n                    <AddEditRestriction formId=\"addRestriction\" onSubmit={submitHandler} permissions={permissionData} />\r\n                </CommonDialog>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import propTypes from 'prop-types';\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\r\n\r\nconst DeleteDialog = ({ onDeleteHandler, onClose, open, dept, title, name }) => {\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n    const handleOk = () => {\r\n        onDeleteHandler();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                sx={{ p: 3 }}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    Are you sure you want to delete the\r\n                    <strong>\r\n                        {' '}\r\n                        {dept} {title} {name}\r\n                    </strong>\r\n                    ? Click <strong>Yes, Delete</strong> to proceed or <strong>Cancel</strong> to cancel this action.\r\n                </DialogTitle>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button variant=\"contained\" onClick={handleOk}>\r\n                        Yes, Delete{' '}\r\n                    </Button>\r\n                    <Button variant=\"text\" color=\"error\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nDeleteDialog.propTypes = {\r\n    onDeleteHandler: propTypes.func.isRequired,\r\n    onClose: propTypes.func.isRequired,\r\n    open: propTypes.bool.isRequired,\r\n    dept: propTypes.string.isRequired,\r\n    title: propTypes.string,\r\n    name: propTypes.string\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["Transition","forwardRef","props","ref","direction","open","children","title","showButton","sx","onClose","isComment","buttons","id","saveButton","openDialog","setOpenDialog","useState","useEffect","handleCloseDialog","prevState","TransitionComponent","keepMounted","h2","p","justifyContent","m","borderRadius","minWidth","sm","xs","minHeight","variant","gutterBottom","component","onClick","position","right","top","dividers","container","alignItems","spacing","gridSpacing","item","color","type","form","validationSchema","yup","shape","name","required","slug","description","permission_id","value","formId","onSubmit","permissions","initValue","formik","useFormik","initialValues","formType","values","data","formData","FormData","append","AxiosAuthServices","EditRestriction","AddRestriction","addUpdateRestrictionApi","then","res","status","apiSuccessSnackBar","apiValidationSnackBar","catch","err","apiErrorSnackBar","Box","handleSubmit","Grid","Typography","Required","TextField","fullWidth","size","label","defaultValue","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","rows","Autocomplete","options","getOptionLabel","option","filter","pr","renderOption","selected","Checkbox","checked","renderInput","params","_","setFieldValue","columns","align","width","search","orderColumn","displayLength","displayStart","recordsTotal","permissionFilter","callApi","setPermissionData","permissionData","setData","page","setPage","rowsPerPage","setRowsPerPage","openEdit","setOpenEdit","openDelete","setOpenDelete","restrictionData","setRestrictionData","getData","async","RestrictionList","restrictionListApi","totalCount","permissionList","TableContainer","Table","TableHead","TableRow","map","column","TableCell","style","TableBody","index","hover","role","permission_name","IconButton","editData","row","Edit","fontSize","deleteData","DeleteOutline","TablePagination","rowsPerPageOptions","count","Number","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","CommonDialog","DeleteDialog","onDeleteHandler","DeleteRestriction","deleteRestrictionApi","dept","setSearch","setPermissionFilter","setCallApi","openAdd","setOpenAdd","MainCard","mb","mt","flexGrow","Button","AddCircleOutlineOutlined","mr","FormControl","InputLabel","Select","labelId","e","MenuProps","maxHeight","MenuItem","idx","OutlinedInput","placeholder","startAdornment","InputAdornment","stroke","autoComplete","content","handleClose","createSvgIcon","_jsx","d"],"sourceRoot":""}