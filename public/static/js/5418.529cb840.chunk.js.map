{"version":3,"file":"static/js/5418.529cb840.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://technobrains.io/\" target=\"_blank\" underline=\"hover\">\r\n            technobrains.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://technobrains.io/\" target=\"_blank\" underline=\"hover\">\r\n            &copy; technobrains.io\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport { apiErrorSnackBar } from 'utils/SnackBar';\r\n\r\nimport useAuth from 'hooks/useAuth';\r\nimport { LOGIN } from 'store/actions';\r\nimport { Link } from 'react-router-dom';\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n    const { login } = useAuth();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: {\r\n                isLoggedIn: false\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid> */}\r\n                {/* <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid> */}\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    // LoginApi(values)\r\n                    //     .then((res) => {\r\n                    //         if (res.data && res.data.status === 1) {\r\n                    //             localStorage.setItem('token', res.data.data.token);\r\n                    //             localStorage.setItem('userDetails', JSON.stringify(res.data.data.user));\r\n                    //             navigate('/');\r\n                    //         } else {\r\n                    //             apiValidationSnackBar(res);\r\n                    //         }\r\n                    //     })\r\n                    //     .catch((err) => {\r\n                    //         apiErrorSnackBar(err);\r\n                    //     });\r\n\r\n                    try {\r\n                        await login(values);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            apiErrorSnackBar(err);\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                color=\"secondary\"\r\n                                component={Link}\r\n                                to=\"/forgot-password\"\r\n                                sx={{ textDecoration: 'none', cursor: 'pointer' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport Logo1 from 'assets/images/logo.png';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"/\">\r\n                                            <img src={Logo1} alt=\"logo\" height=\"50\" />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography component={Link} to=\"/register\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                                Don&apos;t have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["scripted","useRef","useEffect","current","direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","others","login","useAuth","useTheme","dispatch","useDispatch","scriptedRef","useScriptRef","checked","setChecked","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","type","LOGIN","payload","isLoggedIn","Grid","container","spacing","item","alignItems","Box","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","async","values","setErrors","setStatus","setSubmitting","success","err","console","error","apiErrorSnackBar","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Stack","FormControlLabel","control","Checkbox","color","to","textDecoration","cursor","mt","AnimateButton","Button","disableElevation","disabled","matchDownSM","useMediaQuery","breakpoints","down","m","AuthCardWrapper","src","Logo1","alt","height","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin","AuthFooter"],"sourceRoot":""}