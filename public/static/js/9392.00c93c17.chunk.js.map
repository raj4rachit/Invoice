{"version":3,"file":"static/js/9392.00c93c17.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","views/pages/authentication/auth-forms/AuthChangePassword.js","views/pages/authentication/authentication3/ChangePassword.js"],"sourcesContent":["// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://technobrains.io/\" target=\"_blank\" underline=\"hover\">\r\n            technobrains.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://technobrains.io/\" target=\"_blank\" underline=\"hover\">\r\n            &copy; technobrains.io\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport { ChangePasswordApi } from 'apis/Auth';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst AuthChangePassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleClickShowConfirmPassword = () => {\r\n        setShowConfirmPassword(!showConfirmPassword);\r\n    };\r\n\r\n    const handleMouseDownConfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    token: params.id,\r\n                    new_password: '',\r\n                    confirm_password: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    new_password: Yup.string().required('New password is required.'),\r\n                    confirm_password: Yup.string()\r\n                        .required('Confirm password is required.')\r\n                        .oneOf([Yup.ref('new_password'), null], 'New password and confirm password not match.')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    try {\r\n                        await ChangePasswordApi(values)\r\n                            .then((res) => {\r\n                                if (res.data && res.data.status === 1) {\r\n                                    apiSuccessSnackBar(res);\r\n                                    navigate('/login');\r\n                                } else {\r\n                                    apiValidationSnackBar(res);\r\n                                }\r\n                            })\r\n                            .catch((err) => {\r\n                                apiErrorSnackBar(err);\r\n                            });\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        apiErrorSnackBar(err);\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.new_password && errors.new_password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">New Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.new_password}\r\n                                name=\"new_password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"New Password\"\r\n                                inputProps={{}}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            {touched.new_password && errors.new_password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.new_password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.confirm_password && errors.confirm_password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password-login\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-confirm-password-login\"\r\n                                type={showConfirmPassword ? 'text' : 'password'}\r\n                                value={values.confirm_password}\r\n                                name=\"confirm_password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowConfirmPassword}\r\n                                            onMouseDown={handleMouseDownConfirmPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Confirm Password\"\r\n                                inputProps={{}}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            {touched.confirm_password && errors.confirm_password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.confirm_password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button disableElevation fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthChangePassword;\r\n","// material-ui\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport Logo from 'ui-component/Logo';\r\nimport Logo1 from 'assets/images/logo.png';\r\nimport AuthChangePassword from '../auth-forms/AuthChangePassword';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\n\r\nconst ChangePassword = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"/\">\r\n                                            <img src={Logo1} alt=\"logo\" height=\"50\" />\r\n                                            {/* <Logo /> */}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Change Password\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter new password to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthChangePassword />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                                Remember It?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","createSvgIcon","_jsx","d","others","useTheme","params","useParams","navigate","useNavigate","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleClickShowConfirmPassword","handleMouseDownConfirmPassword","initialValues","token","id","new_password","confirm_password","validationSchema","Yup","shape","required","oneOf","onSubmit","async","ChangePasswordApi","values","then","res","data","status","apiSuccessSnackBar","apiValidationSnackBar","catch","err","apiErrorSnackBar","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","value","name","onBlur","onChange","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","label","inputProps","autoComplete","FormHelperText","Box","mt","AnimateButton","Button","disableElevation","color","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","alignItems","m","mb","AuthCardWrapper","spacing","to","src","Logo1","alt","height","Stack","Typography","secondary","main","gutterBottom","fontSize","textAlign","Divider","textDecoration","AuthFooter"],"sourceRoot":""}