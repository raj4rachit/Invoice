{"version":3,"file":"static/js/295.9381b24e.chunk.js","mappings":"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","sources":["apis/Permission.js","utils/CommonDialog.jsx","views/permission/group/AddEditPermissionGroup.jsx","views/permission/group/PermissionGroupList.jsx","views/permission/group/index.jsx","views/utilities/DeleteDialog.jsx","../node_modules/@mui/icons-material/esm/CloseOutlined.js","../node_modules/@mui/icons-material/esm/DeleteOutline.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js"],"sourcesContent":["import {\r\n    AddPermissionGroup,\r\n    DeletePermissionGroup,\r\n    PermissionGroupList,\r\n    PermissionList,\r\n    UpdatePermissionGroup,\r\n    ViewPermissionGroup\r\n} from 'store/ApiConstant';\r\nimport { AxiosAuthServices } from './axios/axiosServices';\r\n\r\nexport function permissionListApi(params) {\r\n    return AxiosAuthServices.get(PermissionList, params);\r\n}\r\n\r\n// ====================== Permission Group ====================== //\r\n\r\nexport function permissionGroupListApi(params) {\r\n    return AxiosAuthServices.get(PermissionGroupList, params);\r\n}\r\n\r\nexport function addUpdatePermissionGroupApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('name', data.name);\r\n    formData.append('description', data.description);\r\n    data.permissions.map((item) => {\r\n        formData.append('permissions[]', item);\r\n    });\r\n\r\n    data.restrictions.map((it) => {\r\n        it.restriction.map((res) => {\r\n            formData.append(`restrictions[]`, res.id);\r\n        });\r\n    });\r\n\r\n    if (data.id !== '' && data.formType === 'edit') {\r\n        formData.append('id', data.id);\r\n        return AxiosAuthServices.post(UpdatePermissionGroup, formData);\r\n    } else {\r\n        return AxiosAuthServices.post(AddPermissionGroup, formData);\r\n    }\r\n}\r\n\r\nexport function deletePermissionGroupApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(DeletePermissionGroup, formData);\r\n}\r\n\r\nexport function viewPermissionGroupApi(data) {\r\n    const formData = new FormData();\r\n    formData.append('type', data.type);\r\n    formData.append('id', data.id);\r\n    return AxiosAuthServices.post(ViewPermissionGroup, formData);\r\n}\r\n","import { CloseOutlined } from '@mui/icons-material';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, Slide, Typography } from '@mui/material';\r\nimport { forwardRef, useEffect, useState } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\r\n\r\nconst CommonDialog = ({ open, children, title, showButton, sx = {}, onClose, isComment, buttons, id, saveButton }) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpenDialog(open ?? false);\r\n    }, [open]);\r\n\r\n    const openAdd = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog((prevState) => !prevState);\r\n        open = false;\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={openDialog}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            sx={{\r\n                h2: { p: '10px 24px' },\r\n                '& .MuiDialog-container ': {\r\n                    justifyContent: 'flex-end',\r\n                    '& .MuiPaper-root': {\r\n                        m: 0,\r\n                        p: 0,\r\n                        borderRadius: '0px',\r\n                        minWidth: { sm: '60%', xs: '100%' },\r\n                        minHeight: '100%'\r\n                    }\r\n                },\r\n                ...sx\r\n            }}\r\n        >\r\n            {title && (\r\n                <DialogTitle>\r\n                    <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        onClick={handleCloseDialog}\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            right: 8,\r\n                            top: 0\r\n                        }}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n            )}\r\n            <DialogContent dividers>{children}</DialogContent>\r\n            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"flex-end\">\r\n                <Grid item xs={12}>\r\n                    <DialogActions>\r\n                        {/* {buttons} */}\r\n\r\n                        {!saveButton && (\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" form={id}>\r\n                                    Save\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        )}\r\n                        <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CommonDialog;\r\n","import propTypes from 'prop-types';\r\n\r\nimport { Autocomplete, Box, Checkbox, Divider, FormControlLabel, Grid, TextField, Typography } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport Required from 'views/utilities/Required';\r\n\r\n// third party\r\nimport * as yup from 'yup';\r\nimport { addUpdatePermissionGroupApi } from 'apis/Permission';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string().required('Group name is required.'),\r\n    description: yup.string().required('Group description is required.')\r\n});\r\n\r\nconst AddEditPermissionGroup = ({ value, formId, onSubmit, permissions }) => {\r\n    const initValue = value ?? false;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: initValue ? initValue.id : '',\r\n            name: initValue ? initValue.name : '',\r\n            description: initValue ? initValue.description : '',\r\n            permissions: initValue ? initValue.permissions : [],\r\n            restrictions: initValue ? initValue.permissionList : [],\r\n            formType: initValue && initValue.id ? 'edit' : 'add'\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            addUpdatePermissionGroupApi(values)\r\n                .then((res) => {\r\n                    if (res.data && res.data.status === 1) {\r\n                        if (onSubmit) onSubmit();\r\n                        apiSuccessSnackBar(res);\r\n                    } else {\r\n                        apiValidationSnackBar(res);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    apiErrorSnackBar(err);\r\n                });\r\n        }\r\n    });\r\n\r\n    const checkValue = (row) => {\r\n        if (row.is_default === 'Yes') {\r\n            return false;\r\n        }\r\n        return formik.values.permissions.filter((p) => p === row.id).length === 0 && true;\r\n    };\r\n\r\n    const checkPermission = (row) => {\r\n        if (row.is_default === 'Yes') {\r\n            const checkLength = formik.values.permissions.filter((a) => a === row.id).length === 1;\r\n            if (!checkLength && row.id) {\r\n                const newValue = [...formik.values.permissions, row.id];\r\n                formik.setFieldValue(`permissions`, newValue);\r\n            }\r\n            return false;\r\n        }\r\n        return formik.values.permissions.filter((p) => Number(p) === Number(row.id)).length === 0 && true;\r\n    };\r\n\r\n    const checkRestriction = (row) => {\r\n        const findKey = formik.values.restrictions.findIndex(function (item) {\r\n            return item.id === row.id;\r\n        });\r\n        const selectedData = findKey > -1 ? formik.values.restrictions[findKey].restriction : [];\r\n        const newData = row.restrictions.filter((a) => selectedData.some((b) => Number(b.id) === Number(a.id)));\r\n        return newData;\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <form id={formId} onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Group Name\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    label=\"Group Name\"\r\n                                    value={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                    helperText={formik.touched.name && formik.errors.name}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    <Required title=\"Group Description\" />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows={4}\r\n                                    size=\"small\"\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    label=\"Group Description\"\r\n                                    defaultValue={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider variant=\"fullWidth\" flexItem />\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h4\"> Permission </Typography>\r\n                            </Grid>\r\n                            {permissions.map((np, idx) => (\r\n                                <Grid item xs={12} key={idx}>\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Grid item xs={12} sm={4}>\r\n                                            <FormControlLabel\r\n                                                sx={{ ml: 0 }}\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        sx={{ paddingLeft: '0' }}\r\n                                                        size=\"medium\"\r\n                                                        name=\"permissions\"\r\n                                                        value={np.id}\r\n                                                        checked={!checkPermission(np)}\r\n                                                        onChange={(e) => {\r\n                                                            if (!e.target.checked) {\r\n                                                                const removeRe = formik.values.restrictions.filter((a) => a.id !== np.id);\r\n                                                                formik.setFieldValue(`restrictions`, removeRe);\r\n                                                            }\r\n                                                            formik.handleChange(e);\r\n                                                        }}\r\n                                                    />\r\n                                                }\r\n                                                label={<Typography variant=\"subtitle1\">{np.name}</Typography>}\r\n                                            >\r\n                                                <Divider variant=\"middle\" />\r\n                                            </FormControlLabel>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8}>\r\n                                            <Autocomplete\r\n                                                multiple\r\n                                                options={np.restrictions ?? []}\r\n                                                getOptionLabel={(option) => (option.name ? option.name : '')}\r\n                                                value={checkRestriction(np)}\r\n                                                renderOption={(props, option, { selected }) => (\r\n                                                    <li {...props}>\r\n                                                        <Checkbox checked={selected} value={option.id} />\r\n                                                        {option.name}\r\n                                                    </li>\r\n                                                )}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        size=\"small\"\r\n                                                        name={`restrictions.${np.id}`}\r\n                                                        label={`${np.name} restrictions`}\r\n                                                    />\r\n                                                )}\r\n                                                // disabled={checkValue(np) && true}\r\n                                                disabled={checkValue(np)}\r\n                                                onChange={(_, v) => {\r\n                                                    const a = formik.values.restrictions;\r\n                                                    const getIndex = a.findIndex(function (i) {\r\n                                                        return i.id === np.id;\r\n                                                    });\r\n\r\n                                                    if (getIndex > -1) {\r\n                                                        formik.setFieldValue(`restrictions.${getIndex}.restriction`, v);\r\n                                                    } else {\r\n                                                        const val = {\r\n                                                            id: np.id,\r\n                                                            name: np.name,\r\n                                                            restriction: v\r\n                                                        };\r\n                                                        const newValue = [...a, val];\r\n                                                        formik.setFieldValue(`restrictions`, newValue);\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nAddEditPermissionGroup.propTypes = {\r\n    value: propTypes.object,\r\n    formId: propTypes.string.isRequired,\r\n    onSubmit: propTypes.func,\r\n    permissions: propTypes.array\r\n};\r\n\r\nexport default AddEditPermissionGroup;\r\n","import propTypes from 'prop-types';\r\n\r\nimport { DeleteOutline, Edit as EditIcon } from '@mui/icons-material';\r\nimport {\r\n    Chip,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel\r\n} from '@mui/material';\r\nimport { deletePermissionGroupApi, permissionGroupListApi, viewPermissionGroupApi } from 'apis/Permission';\r\nimport { useEffect, useState } from 'react';\r\nimport CommonDialog from 'utils/CommonDialog';\r\nimport { apiErrorSnackBar, apiSuccessSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport DeleteDialog from 'views/utilities/DeleteDialog';\r\nimport AddEditPermissionGroup from './AddEditPermissionGroup';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// const columns = [\r\n//     { id: 'name', label: 'Name', align: 'left', width: '20%' },\r\n//     { id: 'permissions', label: 'Permissions', align: 'left', width: '70%' },\r\n//     { id: 'action', label: 'Action', align: 'center', width: '10%' }\r\n// ];\r\n\r\nconst params = {\r\n    search: '',\r\n    displayLength: 10,\r\n    displayStart: 0,\r\n    orderDir: 'ASC',\r\n    orderColumn: 0\r\n};\r\nlet recordsTotal = 0;\r\nconst PermissionGroupList = ({ search, callApi, setPermissionData, permissionData }) => {\r\n    const { checkRestriction, recall } = useAuth();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('0');\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [groupData, setGroupData] = useState({});\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRequestSort = (property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const editData = (row) => {\r\n        viewPermissionGroupApi({ type: 'edit', id: row.id })\r\n            .then((res) => {\r\n                if (res.data && res.data.status === 1) {\r\n                    setOpenEdit((prevState) => !prevState);\r\n                    setGroupData(res.data.data.groupData);\r\n                    setPermissionData(res.data.data.allPermissionList);\r\n                } else {\r\n                    apiValidationSnackBar(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    const deleteData = (row) => {\r\n        setOpenDelete(true);\r\n        setGroupData(row);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        setOpenEdit((prevState) => !prevState);\r\n        getData();\r\n    };\r\n\r\n    const deleteHandler = () => {\r\n        deletePermissionGroupApi({ id: groupData.id })\r\n            .then((res) => {\r\n                if (res.data && res.data.status === 1) {\r\n                    setPage(0);\r\n                    getData();\r\n                    setOpenDelete(false);\r\n                    apiSuccessSnackBar(res);\r\n                } else {\r\n                    apiValidationSnackBar(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    const getData = () => {\r\n        permissionGroupListApi(params)\r\n            .then((res) => {\r\n                recordsTotal = res.data.data.totalCount;\r\n                setData(res.data.data.data);\r\n                // setPermissionData(res.data.data.permissionList);\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        params.search = search;\r\n        params.displayLength = rowsPerPage;\r\n        params.displayStart = rowsPerPage * page;\r\n        params.orderDir = order?.toUpperCase() ?? params.orderDir;\r\n        params.orderColumn = Number(orderBy);\r\n        getData();\r\n    }, [page, rowsPerPage, order, orderBy, search, callApi, recall]);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <Table>\r\n                    <EnhancedTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\r\n                    <TableBody>\r\n                        {data.map((item, index) => (\r\n                            <TableRow hover role=\"checkbox\" key={index}>\r\n                                <TableCell>{item.name}</TableCell>\r\n                                {/* <TableCell>\r\n                                    {item.permissionList.map((p, i) => (\r\n                                        <Chip key={i} label={p.name} sx={{ margin: '5px 5px 0 0' }} />\r\n                                    ))}\r\n                                </TableCell> */}\r\n\r\n                                <TableCell>\r\n                                    {item.permissions.map((val, i) => (\r\n                                        <Chip key={i} label={val} sx={{ margin: '5px 5px 0 0' }} />\r\n                                    ))}\r\n                                </TableCell>\r\n                                <TableCell align={'right'}>\r\n                                    {checkRestriction('CAN_EDIT_PERMISSION_GROUP') && (\r\n                                        <IconButton color=\"primary\" component=\"label\" onClick={() => editData(item)}>\r\n                                            <EditIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    )}\r\n                                    {checkRestriction('CAN_DELETE_PERMISSION_GROUP') && (\r\n                                        <IconButton color=\"error\" component=\"label\" onClick={() => deleteData(item)}>\r\n                                            <DeleteOutline fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                component=\"div\"\r\n                count={Number(recordsTotal)}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n\r\n            {openEdit && (\r\n                <CommonDialog\r\n                    open={openEdit}\r\n                    title=\"Edit Permission Group\"\r\n                    onClose={() => setOpenEdit((prevState) => !prevState)}\r\n                    id=\"editPermissionGroup\"\r\n                >\r\n                    <AddEditPermissionGroup\r\n                        value={groupData}\r\n                        formId=\"editPermissionGroup\"\r\n                        onSubmit={submitHandler}\r\n                        permissions={permissionData}\r\n                    />\r\n                </CommonDialog>\r\n            )}\r\n\r\n            {openDelete && (\r\n                <DeleteDialog\r\n                    onDeleteHandler={deleteHandler}\r\n                    onClose={() => setOpenDelete(false)}\r\n                    open={openDelete}\r\n                    dept=\"Permission Group\"\r\n                    name={groupData['name']}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nPermissionGroupList.propTypes = {\r\n    search: propTypes.string.isRequired,\r\n    callApi: propTypes.bool,\r\n    setPermissionData: propTypes.func,\r\n    permissionData: propTypes.array\r\n};\r\n\r\nexport default PermissionGroupList;\r\n\r\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }) {\r\n    const createSortHandler = (property) => () => {\r\n        onRequestSort(property);\r\n    };\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell key=\"name\" sx={{ width: '20%' }}>\r\n                    <TableSortLabel active={orderBy === '0'} direction={orderBy === '0' ? order : 'asc'} onClick={createSortHandler('0')}>\r\n                        Name\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n\r\n                <TableCell sx={{ width: '70%' }}>Permissions</TableCell>\r\n                <TableCell align=\"right\" sx={{ width: '10%' }}>\r\n                    Action\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    order: propTypes.string,\r\n    orderBy: propTypes.string,\r\n    onRequestSort: propTypes.func\r\n};\r\n","import { useState } from 'react';\r\n// Constant\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// Material UI\r\nimport { Button, Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport PermissionGroupList from './PermissionGroupList';\r\nimport { AddCircleOutlineOutlined } from '@mui/icons-material';\r\nimport CommonDialog from 'utils/CommonDialog';\r\nimport AddEditPermissionGroup from './AddEditPermissionGroup';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { viewPermissionGroupApi } from 'apis/Permission';\r\nimport { apiErrorSnackBar, apiValidationSnackBar } from 'utils/SnackBar';\r\nimport { useTransition } from 'react';\r\n\r\nconst Index = () => {\r\n    const { checkRestriction } = useAuth();\r\n    const [search, setSearch] = useState('');\r\n    const [openAdd, setOpenAdd] = useState(false);\r\n    const [callApi, setCallApi] = useState(false);\r\n    const [permissionData, setPermissionData] = useState([]);\r\n    const [, startTransition] = useTransition();\r\n\r\n    const addData = () => {\r\n        setOpenAdd((prevState) => !prevState);\r\n        viewPermissionGroupApi({ type: 'add' })\r\n            .then((res) => {\r\n                if (res.data && res.data.status === 1) {\r\n                    setPermissionData(res.data.data.allPermissionList);\r\n                } else {\r\n                    apiValidationSnackBar(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                apiErrorSnackBar(err);\r\n            });\r\n    };\r\n\r\n    const handleSearch = (event) => {\r\n        startTransition(() => setSearch(event.target.value));\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        setOpenAdd((prevState) => !prevState);\r\n        setCallApi((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainCard\r\n                title={\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing} sx={{ mb: -1, mt: -4 }}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Typography variant=\"column\">Permission Group List</Typography>\r\n                                </Grid>\r\n                                {checkRestriction('CAN_ADD_PERMISSION_GROUP') && (\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" onClick={() => addData()}>\r\n                                            <AddCircleOutlineOutlined sx={{ mr: 0.5 }} /> Add Permission Group\r\n                                        </Button>\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid item>\r\n                                    <OutlinedInput\r\n                                        id=\"input-search-list-style1\"\r\n                                        placeholder=\"Search\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        size=\"small\"\r\n                                        onChange={handleSearch}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={true}\r\n            >\r\n                <PermissionGroupList\r\n                    search={search}\r\n                    callApi={callApi}\r\n                    setPermissionData={setPermissionData}\r\n                    permissionData={permissionData}\r\n                />\r\n            </MainCard>\r\n\r\n            {openAdd && (\r\n                <CommonDialog\r\n                    open={openAdd}\r\n                    title=\"Add Permission Group\"\r\n                    onClose={() => setOpenAdd((prevState) => !prevState)}\r\n                    id=\"addPermissionGroup\"\r\n                >\r\n                    <AddEditPermissionGroup formId=\"addPermissionGroup\" onSubmit={submitHandler} permissions={permissionData} />\r\n                </CommonDialog>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import propTypes from 'prop-types';\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\r\n\r\nconst DeleteDialog = ({ onDeleteHandler, onClose, open, dept, title, name }) => {\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n    const handleOk = () => {\r\n        onDeleteHandler();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                sx={{ p: 3 }}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    Are you sure you want to delete the\r\n                    <strong>\r\n                        {' '}\r\n                        {dept} {title} {name}\r\n                    </strong>\r\n                    ? Click <strong>Yes, Delete</strong> to proceed or <strong>Cancel</strong> to cancel this action.\r\n                </DialogTitle>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button variant=\"contained\" onClick={handleOk}>\r\n                        Yes, Delete{' '}\r\n                    </Button>\r\n                    <Button variant=\"text\" color=\"error\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nDeleteDialog.propTypes = {\r\n    onDeleteHandler: propTypes.func.isRequired,\r\n    onClose: propTypes.func.isRequired,\r\n    open: propTypes.bool.isRequired,\r\n    dept: propTypes.string.isRequired,\r\n    title: propTypes.string,\r\n    name: propTypes.string\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\n\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;"],"names":["permissionListApi","params","AxiosAuthServices","PermissionList","permissionGroupListApi","PermissionGroupList","addUpdatePermissionGroupApi","data","formData","FormData","append","name","description","permissions","map","item","restrictions","it","restriction","res","id","formType","UpdatePermissionGroup","AddPermissionGroup","deletePermissionGroupApi","DeletePermissionGroup","viewPermissionGroupApi","type","ViewPermissionGroup","Transition","forwardRef","props","ref","direction","open","children","title","showButton","sx","onClose","isComment","buttons","saveButton","openDialog","setOpenDialog","useState","useEffect","handleCloseDialog","prevState","TransitionComponent","keepMounted","h2","p","justifyContent","m","borderRadius","minWidth","sm","xs","minHeight","variant","gutterBottom","component","onClick","position","right","top","dividers","container","alignItems","spacing","gridSpacing","color","form","validationSchema","yup","shape","required","value","formId","onSubmit","initValue","formik","useFormik","initialValues","permissionList","values","then","status","apiSuccessSnackBar","apiValidationSnackBar","catch","err","apiErrorSnackBar","checkPermission","row","is_default","filter","a","length","newValue","setFieldValue","Number","checkRestriction","findKey","findIndex","selectedData","some","b","Box","handleSubmit","Grid","Typography","Required","TextField","fullWidth","size","label","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","rows","defaultValue","Divider","flexItem","np","idx","FormControlLabel","ml","control","Checkbox","paddingLeft","checked","e","target","removeRe","Autocomplete","multiple","options","getOptionLabel","option","renderOption","selected","renderInput","disabled","_","v","getIndex","i","val","search","displayLength","displayStart","orderDir","orderColumn","recordsTotal","callApi","setPermissionData","permissionData","recall","useAuth","setData","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","openEdit","setOpenEdit","openDelete","setOpenDelete","groupData","setGroupData","getData","totalCount","toUpperCase","TableContainer","Table","EnhancedTableHead","onRequestSort","property","TableBody","index","TableRow","hover","role","TableCell","Chip","margin","align","IconButton","editData","allPermissionList","Edit","fontSize","deleteData","DeleteOutline","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","CommonDialog","DeleteDialog","onDeleteHandler","dept","TableHead","width","TableSortLabel","active","setSearch","openAdd","setOpenAdd","setCallApi","startTransition","useTransition","MainCard","mb","mt","flexGrow","Button","AddCircleOutlineOutlined","mr","OutlinedInput","placeholder","startAdornment","InputAdornment","stroke","autoComplete","content","handleClose","pr","createSvgIcon","_jsx","d","getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","overridesResolver","styles","ownerState","formControlLabelClasses","root","capitalize","labelPlacement","theme","_extends","display","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","vars","palette","text","React","inProps","useThemeProps","className","componentsProps","disabledProp","disableTypography","labelProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","typography","_jsxs","clsx","getTableSortLabelUtilityClass","TableSortLabelRoot","ButtonBase","secondary","tableSortLabelClasses","opacity","primary","TableSortLabelIcon","icon","transition","transitions","create","duration","shorter","userSelect","transform","hideSortIcon","IconComponent","ArrowDownwardIcon","disableRipple","as"],"sourceRoot":""}